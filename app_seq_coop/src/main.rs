#![no_std]
#![no_main]
/*

/!\ WARNING
This is a scheduled project, meaning that the main.rs file is to be generated by running generate-main.py 
(with the scheduling you want as a JSON file (see rust-stm32/taskSequencing/README.md))

All content of this main.rs file will be overwritten when you run generate-main.py ; 
from your point of view the entry point is user_tasks.rs, as it's where the scheduled tasks will be taken from. 

*/

use geranium_rt::println;
use core::arch::asm;

struct Task {
    pc: u32,
    // sp: u32
}

static mut t:Task = Task {pc: 0};

#[inline(never)]
#[no_mangle]
fn test_func() -> i32 {
    let a = 10;
    return a;
}

fn scheduler() -> () {

}

#[no_mangle]
fn main(){
    let r = test_func();
    let mut sp_v: u32 = 0;
    unsafe {
        asm!("mov {sp_v}, sp",
              sp_v = out(reg) sp_v,
              // FIXME declare sp here
             );

    }
    println!("sp: 0x{:x}", sp_v);
}
